apply plugin: 'com.android.application'
apply plugin: 'android-apt'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.cabbage.useraccountprototype"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/rxjava.properties'
    }

    def keyStorePath = System.getenv('ANDROID_KEYSTORE_PATH')
    keyStorePath = keyStorePath == null ? 'C:/KeyStore/' : keyStorePath

    File propsFile = new File(keyStorePath + 'keyStoreProperties.txt')
    def localKeyStore = propsFile.exists()

    if (localKeyStore) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))

        def debugConfigName = 'debug'
        def releaseConfigName = 'release'

        signingConfigs {
            debug {
                storeFile = file(keyStorePath + props[debugConfigName + 'StoreFile'])
                storePassword = props[debugConfigName + 'StorePassword']
                keyAlias = props[debugConfigName + 'KeyAlias']
                keyPassword = props[debugConfigName + 'KeyPassword']
            }

            release {
                storeFile = file(keyStorePath + props[releaseConfigName + 'StoreFile'])
                storePassword = props[releaseConfigName + 'StorePassword']
                keyAlias = props[releaseConfigName + 'KeyAlias']
                keyPassword = props[releaseConfigName + 'KeyPassword']

            }
        }
    }

    buildTypes {
        debug {
            debuggable true
            if (localKeyStore) signingConfig signingConfigs.debug
            versionNameSuffix "debug"
        }
        release {
            debuggable false
            minifyEnabled true
            if (localKeyStore) signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

final SUPPORT_LIBRARY_VERSION = "25.3.1"
final TIMBER_VERSION = '4.3.0'
final BUTTER_KNIFE_VERSION = '8.2.1'

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:design:${SUPPORT_LIBRARY_VERSION}"
    compile "com.android.support:cardview-v7:${SUPPORT_LIBRARY_VERSION}"

    // Material drawer and icons
    compile('com.mikepenz:materialdrawer:5.9.0@aar') {
        transitive = true
    }
    compile 'com.mikepenz:google-material-typeface:2.2.0.3.original@aar'

    // Misc
    // https://github.com/JakeWharton/timber/issues/100
    compile "com.jakewharton.timber:timber:$TIMBER_VERSION"

    compile "com.jakewharton:butterknife:$BUTTER_KNIFE_VERSION"
    apt "com.jakewharton:butterknife-compiler:$BUTTER_KNIFE_VERSION"

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
}
